// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "BasicMessage.pbobjc.h"
 #import "CommonModel.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - BasicMessageRoot

@implementation BasicMessageRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - BasicMessageRoot_FileDescriptor

static GPBFileDescriptor *BasicMessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"framework"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PBMessageType

GPBEnumDescriptor *PBMessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Default\000BasicConfigGet\000SystemParaAdd\000Sys"
        "temParaUpdate\000SystemParaGetList\000SystemPa"
        "raGetOne\000SystemParaGetOneDefault\000UserSen"
        "dValidCode\000FeedbackAdd\000FeedbackGetList\000F"
        "eedbackDelete\000FeedbackUpdate\000AdminLogin\000"
        "AdminAdd\000AdminGetList\000AdminResetPassword"
        "\000AdminUpdate\000AdminLogGetList\000LocationGet"
        "All\000LocationDetect\000LocationGetProvince\000L"
        "ocationGetCityByProvince\000LocationGetDist"
        "rictByCity\000LocationGetById\000";
    static const int32_t values[] = {
        PBMessageType_Default,
        PBMessageType_BasicConfigGet,
        PBMessageType_SystemParaAdd,
        PBMessageType_SystemParaUpdate,
        PBMessageType_SystemParaGetList,
        PBMessageType_SystemParaGetOne,
        PBMessageType_SystemParaGetOneDefault,
        PBMessageType_UserSendValidCode,
        PBMessageType_FeedbackAdd,
        PBMessageType_FeedbackGetList,
        PBMessageType_FeedbackDelete,
        PBMessageType_FeedbackUpdate,
        PBMessageType_AdminLogin,
        PBMessageType_AdminAdd,
        PBMessageType_AdminGetList,
        PBMessageType_AdminResetPassword,
        PBMessageType_AdminUpdate,
        PBMessageType_AdminLogGetList,
        PBMessageType_LocationGetAll,
        PBMessageType_LocationDetect,
        PBMessageType_LocationGetProvince,
        PBMessageType_LocationGetCityByProvince,
        PBMessageType_LocationGetDistrictByCity,
        PBMessageType_LocationGetById,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMessageType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PBMessageType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PBMessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMessageType_Default:
    case PBMessageType_BasicConfigGet:
    case PBMessageType_SystemParaAdd:
    case PBMessageType_SystemParaUpdate:
    case PBMessageType_SystemParaGetList:
    case PBMessageType_SystemParaGetOne:
    case PBMessageType_SystemParaGetOneDefault:
    case PBMessageType_UserSendValidCode:
    case PBMessageType_FeedbackAdd:
    case PBMessageType_FeedbackGetList:
    case PBMessageType_FeedbackDelete:
    case PBMessageType_FeedbackUpdate:
    case PBMessageType_AdminLogin:
    case PBMessageType_AdminAdd:
    case PBMessageType_AdminGetList:
    case PBMessageType_AdminResetPassword:
    case PBMessageType_AdminUpdate:
    case PBMessageType_AdminLogGetList:
    case PBMessageType_LocationGetAll:
    case PBMessageType_LocationDetect:
    case PBMessageType_LocationGetProvince:
    case PBMessageType_LocationGetCityByProvince:
    case PBMessageType_LocationGetDistrictByCity:
    case PBMessageType_LocationGetById:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PBMessageRequest

@implementation PBMessageRequest

@dynamic encrypt;
@dynamic compress;
@dynamic type;
@dynamic messageData;
@dynamic requestId;
@dynamic version;
@dynamic timeStamp;
@dynamic deviceOs;
@dynamic deviceModel;
@dynamic deviceId;
@dynamic deviceType;
@dynamic appVersion;
@dynamic appKey;
@dynamic token;
@dynamic signature;
@dynamic adminId;
@dynamic network;

typedef struct PBMessageRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t version;
  uint32_t deviceOs;
  PBDeviceType deviceType;
  uint32_t adminId;
  PBNetwork network;
  NSData *messageData;
  NSString *deviceModel;
  NSString *deviceId;
  NSString *appVersion;
  NSString *appKey;
  NSString *token;
  NSString *signature;
  uint64_t requestId;
  uint64_t timeStamp;
} PBMessageRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "encrypt",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Encrypt,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "compress",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Compress,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, messageData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_RequestId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Version,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, version),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "timeStamp",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_TimeStamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, timeStamp),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "deviceOs",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_DeviceOs,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, deviceOs),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "deviceModel",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_DeviceModel,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, deviceModel),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_DeviceId,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, deviceId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "deviceType",
        .dataTypeSpecific.enumDescFunc = PBDeviceType_EnumDescriptor,
        .number = PBMessageRequest_FieldNumber_DeviceType,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, deviceType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AppVersion,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appKey",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AppKey,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, appKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "token",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Token,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, token),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Signature,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, signature),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adminId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AdminId,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, adminId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "network",
        .dataTypeSpecific.enumDescFunc = PBNetwork_EnumDescriptor,
        .number = PBMessageRequest_FieldNumber_Network,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, network),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldHasEnumDescriptor),
        .dataType = GPBDataTypeEnum,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBMessageRequest class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBMessageRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\n\004\013\000\005\t\000\007\t\000\010\010\000\t\013\000\n\010\000\013\n\000\014\n\000\r\006\000\020\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

int32_t PBMessageRequest_DeviceType_RawValue(PBMessageRequest *message) {
  GPBDescriptor *descriptor = [PBMessageRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PBMessageRequest_FieldNumber_DeviceType];
  return GPBGetMessageInt32Field(message, field);
}

void SetPBMessageRequest_DeviceType_RawValue(PBMessageRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [PBMessageRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PBMessageRequest_FieldNumber_DeviceType];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

int32_t PBMessageRequest_Network_RawValue(PBMessageRequest *message) {
  GPBDescriptor *descriptor = [PBMessageRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PBMessageRequest_FieldNumber_Network];
  return GPBGetMessageInt32Field(message, field);
}

void SetPBMessageRequest_Network_RawValue(PBMessageRequest *message, int32_t value) {
  GPBDescriptor *descriptor = [PBMessageRequest descriptor];
  GPBFieldDescriptor *field = [descriptor fieldWithNumber:PBMessageRequest_FieldNumber_Network];
  GPBSetInt32IvarWithFieldInternal(message, field, value, descriptor.file.syntax);
}

#pragma mark - PBMessageResponse

@implementation PBMessageResponse

@dynamic encrypt;
@dynamic compress;
@dynamic type;
@dynamic messageData;
@dynamic appKey;
@dynamic requestId;
@dynamic resultCode;
@dynamic resultInfo;

typedef struct PBMessageResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t resultCode;
  NSData *messageData;
  NSString *resultInfo;
  NSString *appKey;
  uint64_t requestId;
} PBMessageResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "encrypt",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Encrypt,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "compress",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Compress,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, messageData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_RequestId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultCode",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_ResultCode,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, resultCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "resultInfo",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_ResultInfo,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, resultInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appKey",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_AppKey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, appKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBMessageResponse class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBMessageResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\004\013\000\005\t\000\006\n\000\007\n\000\010\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PBValidCodeReq

@implementation PBValidCodeReq

@dynamic mobileCode;
@dynamic mobile;
@dynamic validCodeType;

typedef struct PBValidCodeReq__storage_ {
  uint32_t _has_storage_[1];
  uint32_t validCodeType;
  NSString *mobileCode;
  NSString *mobile;
} PBValidCodeReq__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "mobileCode",
        .dataTypeSpecific.className = NULL,
        .number = PBValidCodeReq_FieldNumber_MobileCode,
        .hasIndex = 0,
        .offset = (uint32_t)offsetof(PBValidCodeReq__storage_, mobileCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "mobile",
        .dataTypeSpecific.className = NULL,
        .number = PBValidCodeReq_FieldNumber_Mobile,
        .hasIndex = 1,
        .offset = (uint32_t)offsetof(PBValidCodeReq__storage_, mobile),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "validCodeType",
        .dataTypeSpecific.className = NULL,
        .number = PBValidCodeReq_FieldNumber_ValidCodeType,
        .hasIndex = 2,
        .offset = (uint32_t)offsetof(PBValidCodeReq__storage_, validCodeType),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBValidCodeReq class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBValidCodeReq__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\002\001\n\000\003\r\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
