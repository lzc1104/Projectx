// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BasicMessage.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers_RuntimeSupport.h>
#else
 #import "GPBProtocolBuffers_RuntimeSupport.h"
#endif

 #import "BasicMessage.pbobjc.h"
 #import "CommonModel.pbobjc.h"
// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

#pragma mark - BasicMessageRoot

@implementation BasicMessageRoot

// No extensions in the file and none of the imports (direct or indirect)
// defined extensions, so no need to generate +extensionRegistry.

@end

#pragma mark - BasicMessageRoot_FileDescriptor

static GPBFileDescriptor *BasicMessageRoot_FileDescriptor(void) {
  // This is called by +initialize so there is no need to worry
  // about thread safety of the singleton.
  static GPBFileDescriptor *descriptor = NULL;
  if (!descriptor) {
    GPB_DEBUG_CHECK_RUNTIME_VERSIONS();
    descriptor = [[GPBFileDescriptor alloc] initWithPackage:@"framework"
                                                     syntax:GPBFileSyntaxProto3];
  }
  return descriptor;
}

#pragma mark - Enum PBMessageType

GPBEnumDescriptor *PBMessageType_EnumDescriptor(void) {
  static GPBEnumDescriptor *descriptor = NULL;
  if (!descriptor) {
    static const char *valueNames =
        "Default\000BasicConfigGet\000SystemParaAdd\000Sys"
        "temParaUpdate\000SystemParaGetList\000SystemPa"
        "raGetOne\000SystemParaGetOneDefault\000UserSen"
        "dValidCode\000FeedbackAdd\000FeedbackGetList\000F"
        "eedbackDelete\000FeedbackUpdate\000AdminLogin\000"
        "AdminAdd\000AdminGetList\000AdminResetPassword"
        "\000AdminUpdate\000AdminLogGetList\000LocationGet"
        "All\000LocationDetect\000LocationGetProvince\000L"
        "ocationGetCityByProvince\000LocationGetDist"
        "rictByCity\000LocationGetById\000LocationHotCi"
        "ties\000LocationSetHotCity\000LocationUnSetHot"
        "City\000LocationRefreshCache\000LocationUpdate"
        "CityLevel\000LocationGetByCityLevel\000Locatio"
        "nGetLngLat\000PushMessageAdd\000PushMessageSea"
        "rchList\000PushMessageGetById\000SocketLogin\000S"
        "ocketPingPong\000SocketSubscribeTopic\000Socke"
        "tUnsubscribeTopic\000SocketMultiLogin\000";
    static const int32_t values[] = {
        PBMessageType_Default,
        PBMessageType_BasicConfigGet,
        PBMessageType_SystemParaAdd,
        PBMessageType_SystemParaUpdate,
        PBMessageType_SystemParaGetList,
        PBMessageType_SystemParaGetOne,
        PBMessageType_SystemParaGetOneDefault,
        PBMessageType_UserSendValidCode,
        PBMessageType_FeedbackAdd,
        PBMessageType_FeedbackGetList,
        PBMessageType_FeedbackDelete,
        PBMessageType_FeedbackUpdate,
        PBMessageType_AdminLogin,
        PBMessageType_AdminAdd,
        PBMessageType_AdminGetList,
        PBMessageType_AdminResetPassword,
        PBMessageType_AdminUpdate,
        PBMessageType_AdminLogGetList,
        PBMessageType_LocationGetAll,
        PBMessageType_LocationDetect,
        PBMessageType_LocationGetProvince,
        PBMessageType_LocationGetCityByProvince,
        PBMessageType_LocationGetDistrictByCity,
        PBMessageType_LocationGetById,
        PBMessageType_LocationHotCities,
        PBMessageType_LocationSetHotCity,
        PBMessageType_LocationUnSetHotCity,
        PBMessageType_LocationRefreshCache,
        PBMessageType_LocationUpdateCityLevel,
        PBMessageType_LocationGetByCityLevel,
        PBMessageType_LocationGetLngLat,
        PBMessageType_PushMessageAdd,
        PBMessageType_PushMessageSearchList,
        PBMessageType_PushMessageGetById,
        PBMessageType_SocketLogin,
        PBMessageType_SocketPingPong,
        PBMessageType_SocketSubscribeTopic,
        PBMessageType_SocketUnsubscribeTopic,
        PBMessageType_SocketMultiLogin,
    };
    GPBEnumDescriptor *worker =
        [GPBEnumDescriptor allocDescriptorForName:GPBNSStringifySymbol(PBMessageType)
                                       valueNames:valueNames
                                           values:values
                                            count:(uint32_t)(sizeof(values) / sizeof(int32_t))
                                     enumVerifier:PBMessageType_IsValidValue];
    if (!OSAtomicCompareAndSwapPtrBarrier(nil, worker, (void * volatile *)&descriptor)) {
      [worker release];
    }
  }
  return descriptor;
}

BOOL PBMessageType_IsValidValue(int32_t value__) {
  switch (value__) {
    case PBMessageType_Default:
    case PBMessageType_BasicConfigGet:
    case PBMessageType_SystemParaAdd:
    case PBMessageType_SystemParaUpdate:
    case PBMessageType_SystemParaGetList:
    case PBMessageType_SystemParaGetOne:
    case PBMessageType_SystemParaGetOneDefault:
    case PBMessageType_UserSendValidCode:
    case PBMessageType_FeedbackAdd:
    case PBMessageType_FeedbackGetList:
    case PBMessageType_FeedbackDelete:
    case PBMessageType_FeedbackUpdate:
    case PBMessageType_AdminLogin:
    case PBMessageType_AdminAdd:
    case PBMessageType_AdminGetList:
    case PBMessageType_AdminResetPassword:
    case PBMessageType_AdminUpdate:
    case PBMessageType_AdminLogGetList:
    case PBMessageType_LocationGetAll:
    case PBMessageType_LocationDetect:
    case PBMessageType_LocationGetProvince:
    case PBMessageType_LocationGetCityByProvince:
    case PBMessageType_LocationGetDistrictByCity:
    case PBMessageType_LocationGetById:
    case PBMessageType_LocationHotCities:
    case PBMessageType_LocationSetHotCity:
    case PBMessageType_LocationUnSetHotCity:
    case PBMessageType_LocationRefreshCache:
    case PBMessageType_LocationUpdateCityLevel:
    case PBMessageType_LocationGetByCityLevel:
    case PBMessageType_LocationGetLngLat:
    case PBMessageType_PushMessageAdd:
    case PBMessageType_PushMessageSearchList:
    case PBMessageType_PushMessageGetById:
    case PBMessageType_SocketLogin:
    case PBMessageType_SocketPingPong:
    case PBMessageType_SocketSubscribeTopic:
    case PBMessageType_SocketUnsubscribeTopic:
    case PBMessageType_SocketMultiLogin:
      return YES;
    default:
      return NO;
  }
}

#pragma mark - PBMessageRequest

@implementation PBMessageRequest

@dynamic encrypted;
@dynamic compressed;
@dynamic type;
@dynamic messageData;
@dynamic requestId;
@dynamic version;
@dynamic timestamp;
@dynamic hasDevice, device;
@dynamic hasNetwork, network;
@dynamic appVersion;
@dynamic appKey;
@dynamic accessToken;
@dynamic signature;
@dynamic adminId;

typedef struct PBMessageRequest__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t version;
  uint32_t adminId;
  NSData *messageData;
  PBDevice *device;
  PBNetwork *network;
  NSString *appVersion;
  NSString *appKey;
  NSString *accessToken;
  NSString *signature;
  uint64_t requestId;
  uint64_t timestamp;
} PBMessageRequest__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "encrypted",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Encrypted,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "compressed",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Compressed,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, messageData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_RequestId,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Version,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, version),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Timestamp,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "device",
        .dataTypeSpecific.className = GPBStringifySymbol(PBDevice),
        .number = PBMessageRequest_FieldNumber_Device,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, device),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "network",
        .dataTypeSpecific.className = GPBStringifySymbol(PBNetwork),
        .number = PBMessageRequest_FieldNumber_Network,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, network),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AppVersion,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appKey",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AppKey,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, appKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accessToken",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AccessToken,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, accessToken),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_Signature,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, signature),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "adminId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageRequest_FieldNumber_AdminId,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PBMessageRequest__storage_, adminId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBMessageRequest class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBMessageRequest__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\006\004\013\000\005\t\000\014\n\000\r\006\000\016\013\000\020\007\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PBMessageResponse

@implementation PBMessageResponse

@dynamic encrypted;
@dynamic compressed;
@dynamic type;
@dynamic messageData;
@dynamic appKey;
@dynamic requestId;
@dynamic resultCode;
@dynamic resultInfo;

typedef struct PBMessageResponse__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t resultCode;
  NSData *messageData;
  NSString *resultInfo;
  NSString *appKey;
  uint64_t requestId;
} PBMessageResponse__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "encrypted",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Encrypted,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "compressed",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Compressed,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, messageData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_RequestId,
        .hasIndex = 7,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "resultCode",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_ResultCode,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, resultCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "resultInfo",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_ResultInfo,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, resultInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appKey",
        .dataTypeSpecific.className = NULL,
        .number = PBMessageResponse_FieldNumber_AppKey,
        .hasIndex = 6,
        .offset = (uint32_t)offsetof(PBMessageResponse__storage_, appKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBMessageResponse class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBMessageResponse__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\005\004\013\000\005\t\000\006\n\000\007\n\000\010\006\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end

#pragma mark - PBSocketMessage

@implementation PBSocketMessage

@dynamic encrypted;
@dynamic compressed;
@dynamic type;
@dynamic messageData;
@dynamic ack;
@dynamic requestId;
@dynamic version;
@dynamic timestamp;
@dynamic hasDevice, device;
@dynamic hasNetwork, network;
@dynamic appVersion;
@dynamic appKey;
@dynamic accessToken;
@dynamic signature;
@dynamic resultCode;
@dynamic resultInfo;

typedef struct PBSocketMessage__storage_ {
  uint32_t _has_storage_[1];
  uint32_t type;
  uint32_t version;
  uint32_t resultCode;
  NSData *messageData;
  PBDevice *device;
  PBNetwork *network;
  NSString *appVersion;
  NSString *appKey;
  NSString *accessToken;
  NSString *signature;
  NSString *resultInfo;
  uint64_t requestId;
  uint64_t timestamp;
} PBSocketMessage__storage_;

// This method is threadsafe because it is initially called
// in +initialize for each subclass.
+ (GPBDescriptor *)descriptor {
  static GPBDescriptor *descriptor = nil;
  if (!descriptor) {
    static GPBMessageFieldDescription fields[] = {
      {
        .name = "encrypted",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Encrypted,
        .hasIndex = 0,
        .offset = 1,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "compressed",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Compressed,
        .hasIndex = 2,
        .offset = 3,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "type",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Type,
        .hasIndex = 4,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, type),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "messageData",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_MessageData,
        .hasIndex = 5,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, messageData),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeBytes,
      },
      {
        .name = "ack",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Ack,
        .hasIndex = 6,
        .offset = 7,  // Stored in _has_storage_ to save space.
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeBool,
      },
      {
        .name = "requestId",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_RequestId,
        .hasIndex = 8,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, requestId),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "version",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Version,
        .hasIndex = 9,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, version),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "timestamp",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Timestamp,
        .hasIndex = 10,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, timestamp),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeUInt64,
      },
      {
        .name = "device",
        .dataTypeSpecific.className = GPBStringifySymbol(PBDevice),
        .number = PBSocketMessage_FieldNumber_Device,
        .hasIndex = 11,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, device),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "network",
        .dataTypeSpecific.className = GPBStringifySymbol(PBNetwork),
        .number = PBSocketMessage_FieldNumber_Network,
        .hasIndex = 12,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, network),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeMessage,
      },
      {
        .name = "appVersion",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_AppVersion,
        .hasIndex = 13,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, appVersion),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "appKey",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_AppKey,
        .hasIndex = 14,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, appKey),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "accessToken",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_AccessToken,
        .hasIndex = 15,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, accessToken),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
      {
        .name = "signature",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_Signature,
        .hasIndex = 16,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, signature),
        .flags = GPBFieldOptional,
        .dataType = GPBDataTypeString,
      },
      {
        .name = "resultCode",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_ResultCode,
        .hasIndex = 17,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, resultCode),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeUInt32,
      },
      {
        .name = "resultInfo",
        .dataTypeSpecific.className = NULL,
        .number = PBSocketMessage_FieldNumber_ResultInfo,
        .hasIndex = 18,
        .offset = (uint32_t)offsetof(PBSocketMessage__storage_, resultInfo),
        .flags = (GPBFieldFlags)(GPBFieldOptional | GPBFieldTextFormatNameCustom),
        .dataType = GPBDataTypeString,
      },
    };
    GPBDescriptor *localDescriptor =
        [GPBDescriptor allocDescriptorForClass:[PBSocketMessage class]
                                     rootClass:[BasicMessageRoot class]
                                          file:BasicMessageRoot_FileDescriptor()
                                        fields:fields
                                    fieldCount:(uint32_t)(sizeof(fields) / sizeof(GPBMessageFieldDescription))
                                   storageSize:sizeof(PBSocketMessage__storage_)
                                         flags:GPBDescriptorInitializationFlag_None];
#if !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    static const char *extraTextFormatInfo =
        "\007\004\013\000\006\t\000\013\n\000\014\006\000\r\013\000\017\n\000\020\n\000";
    [localDescriptor setupExtraTextInfo:extraTextFormatInfo];
#endif  // !GPBOBJC_SKIP_MESSAGE_TEXTFORMAT_EXTRAS
    NSAssert(descriptor == nil, @"Startup recursed!");
    descriptor = localDescriptor;
  }
  return descriptor;
}

@end


#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
