// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CommonModel.proto

// This CPP symbol can be defined to use imports that match up to the framework
// imports needed when using CocoaPods.
#if !defined(GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS)
 #define GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS 0
#endif

#if GPB_USE_PROTOBUF_FRAMEWORK_IMPORTS
 #import <Protobuf/GPBProtocolBuffers.h>
#else
 #import "GPBProtocolBuffers.h"
#endif

#if GOOGLE_PROTOBUF_OBJC_VERSION < 30002
#error This file was generated by a newer version of protoc which is incompatible with your Protocol Buffer library sources.
#endif
#if 30002 < GOOGLE_PROTOBUF_OBJC_MIN_SUPPORTED_VERSION
#error This file was generated by an older version of protoc which is incompatible with your Protocol Buffer library sources.
#endif

// @@protoc_insertion_point(imports)

#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wdeprecated-declarations"

CF_EXTERN_C_BEGIN

@class PBDevice;
@class PBDeviceScreenSize;
@class PBKeyValue;

NS_ASSUME_NONNULL_BEGIN

#pragma mark - Enum PBDeviceType

typedef GPB_ENUM(PBDeviceType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PBDeviceType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 安卓 */
  PBDeviceType_DeviceAndroid = 0,

  /** 苹果 */
  PBDeviceType_DeviceIos = 1,

  /** PC */
  PBDeviceType_DevicePc = 2,
};

GPBEnumDescriptor *PBDeviceType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PBDeviceType_IsValidValue(int32_t value);

#pragma mark - Enum PBNetworkType

/** 网络类型 */
typedef GPB_ENUM(PBNetworkType) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PBNetworkType_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未知网络 */
  PBNetworkType_NetUnknown = 0,

  /** WIFI */
  PBNetworkType_NetWifi = 1,

  /** 2G网络 */
  PBNetworkType_Net2G = 2,

  /** 3G网络 */
  PBNetworkType_Net3G = 3,

  /** 4G网络 */
  PBNetworkType_Net4G = 4,
};

GPBEnumDescriptor *PBNetworkType_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PBNetworkType_IsValidValue(int32_t value);

#pragma mark - Enum PBPaymentChannel

typedef GPB_ENUM(PBPaymentChannel) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PBPaymentChannel_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 支付宝支付 */
  PBPaymentChannel_PayAli = 0,

  /** 微信支付 */
  PBPaymentChannel_PayWechat = 1,

  /** 苹果商店 IAP */
  PBPaymentChannel_PayAppstoreIap = 2,
};

GPBEnumDescriptor *PBPaymentChannel_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PBPaymentChannel_IsValidValue(int32_t value);

#pragma mark - Enum PBSex

typedef GPB_ENUM(PBSex) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PBSex_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 未填 */
  PBSex_SexNone = 0,

  /** 男 */
  PBSex_SexMale = 1,

  /** 女 */
  PBSex_SexFemale = 2,
};

GPBEnumDescriptor *PBSex_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PBSex_IsValidValue(int32_t value);

#pragma mark - Enum PBBoolValue

/** 用于表示可为空的 bool 值，因为 proto3 的 bool 不可为空 */
typedef GPB_ENUM(PBBoolValue) {
  /**
   * Value used if any message's field encounters a value that is not defined
   * by this enum. The message will also have C functions to get/set the rawValue
   * of the field.
   **/
  PBBoolValue_GPBUnrecognizedEnumeratorValue = kGPBUnrecognizedEnumeratorValue,
  /** 空 */
  PBBoolValue_BoolNone = 0,

  /** true */
  PBBoolValue_BoolTrue = 1,

  /** false */
  PBBoolValue_BoolFalse = 2,
};

GPBEnumDescriptor *PBBoolValue_EnumDescriptor(void);

/**
 * Checks to see if the given value is defined by the enum or was not known at
 * the time this source was generated.
 **/
BOOL PBBoolValue_IsValidValue(int32_t value);

#pragma mark - CommonModelRoot

/**
 * Exposes the extension registry for this file.
 *
 * The base class provides:
 * @code
 *   + (GPBExtensionRegistry *)extensionRegistry;
 * @endcode
 * which is a @c GPBExtensionRegistry that includes all the extensions defined by
 * this file and all files that it depends on.
 **/
@interface CommonModelRoot : GPBRootObject
@end

#pragma mark - PBDeviceScreenSize

typedef GPB_ENUM(PBDeviceScreenSize_FieldNumber) {
  PBDeviceScreenSize_FieldNumber_Width = 1,
  PBDeviceScreenSize_FieldNumber_Height = 2,
};

@interface PBDeviceScreenSize : GPBMessage

/** 屏幕宽度 */
@property(nonatomic, readwrite) int32_t width;

/** 屏幕高度 */
@property(nonatomic, readwrite) int32_t height;

@end

#pragma mark - PBDevice

typedef GPB_ENUM(PBDevice_FieldNumber) {
  PBDevice_FieldNumber_DeviceOs = 1,
  PBDevice_FieldNumber_DeviceModel = 2,
  PBDevice_FieldNumber_DeviceId = 3,
  PBDevice_FieldNumber_DeviceType = 4,
  PBDevice_FieldNumber_ScreenSize = 5,
};

@interface PBDevice : GPBMessage

/** 设备操作系统 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceOs;

/** 设备模型 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceModel;

/** 设备ID */
@property(nonatomic, readwrite, copy, null_resettable) NSString *deviceId;

/** 设备类型，参考PBDeviceType */
@property(nonatomic, readwrite) PBDeviceType deviceType;

/** 设备屏幕尺寸 */
@property(nonatomic, readwrite, strong, null_resettable) PBDeviceScreenSize *screenSize;
/** Test to see if @c screenSize has been set. */
@property(nonatomic, readwrite) BOOL hasScreenSize;

@end

/**
 * Fetches the raw value of a @c PBDevice's @c deviceType property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PBDevice_DeviceType_RawValue(PBDevice *message);
/**
 * Sets the raw value of an @c PBDevice's @c deviceType property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPBDevice_DeviceType_RawValue(PBDevice *message, int32_t value);

#pragma mark - PBNetwork

typedef GPB_ENUM(PBNetwork_FieldNumber) {
  PBNetwork_FieldNumber_Type = 1,
};

@interface PBNetwork : GPBMessage

/** 网络类型 */
@property(nonatomic, readwrite) PBNetworkType type;

@end

/**
 * Fetches the raw value of a @c PBNetwork's @c type property, even
 * if the value was not defined by the enum at the time the code was generated.
 **/
int32_t PBNetwork_Type_RawValue(PBNetwork *message);
/**
 * Sets the raw value of an @c PBNetwork's @c type property, allowing
 * it to be set to a value that was not defined by the enum at the time the code
 * was generated.
 **/
void SetPBNetwork_Type_RawValue(PBNetwork *message, int32_t value);

#pragma mark - PBPagePara

typedef GPB_ENUM(PBPagePara_FieldNumber) {
  PBPagePara_FieldNumber_Offset = 1,
  PBPagePara_FieldNumber_Limit = 2,
};

/**
 * 分页参数
 **/
@interface PBPagePara : GPBMessage

/** 偏移量 */
@property(nonatomic, readwrite) uint32_t offset;

/** 限制数 */
@property(nonatomic, readwrite) uint32_t limit;

@end

#pragma mark - PBPageInfo

typedef GPB_ENUM(PBPageInfo_FieldNumber) {
  PBPageInfo_FieldNumber_Total = 1,
  PBPageInfo_FieldNumber_PageOffset = 2,
  PBPageInfo_FieldNumber_PageSize = 3,
  PBPageInfo_FieldNumber_FilterCount = 4,
};

/**
 * 分页信息
 **/
@interface PBPageInfo : GPBMessage

/** 符合条件的总记录数目 */
@property(nonatomic, readwrite) uint32_t total;

/** 返回记录的开始的位置，默认从0开始（不是页码） */
@property(nonatomic, readwrite) uint32_t pageOffset;

/** 实际返回的结果数 */
@property(nonatomic, readwrite) uint32_t pageSize;

/** 服务器查询出结果后主动过滤的记录数 */
@property(nonatomic, readwrite) uint32_t filterCount;

@end

#pragma mark - PBIntValue

typedef GPB_ENUM(PBIntValue_FieldNumber) {
  PBIntValue_FieldNumber_Value = 1,
};

@interface PBIntValue : GPBMessage

@property(nonatomic, readwrite) uint32_t value;

@end

#pragma mark - PBLongValue

typedef GPB_ENUM(PBLongValue_FieldNumber) {
  PBLongValue_FieldNumber_Value = 1,
};

@interface PBLongValue : GPBMessage

@property(nonatomic, readwrite) uint64_t value;

@end

#pragma mark - PBStrValue

typedef GPB_ENUM(PBStrValue_FieldNumber) {
  PBStrValue_FieldNumber_Value = 1,
};

@interface PBStrValue : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - PBKeyValue

typedef GPB_ENUM(PBKeyValue_FieldNumber) {
  PBKeyValue_FieldNumber_Key = 1,
  PBKeyValue_FieldNumber_Value = 2,
};

/**
 * 键值对对象
 **/
@interface PBKeyValue : GPBMessage

@property(nonatomic, readwrite, copy, null_resettable) NSString *key;

@property(nonatomic, readwrite, copy, null_resettable) NSString *value;

@end

#pragma mark - PBKeyValueList

typedef GPB_ENUM(PBKeyValueList_FieldNumber) {
  PBKeyValueList_FieldNumber_KvArray = 1,
};

/**
 * ListKeyValue
 **/
@interface PBKeyValueList : GPBMessage

@property(nonatomic, readwrite, strong, null_resettable) NSMutableArray<PBKeyValue*> *kvArray;
/** The number of items in @c kvArray without causing the array to be created. */
@property(nonatomic, readonly) NSUInteger kvArray_Count;

@end

#pragma mark - PBValidCodeReq

typedef GPB_ENUM(PBValidCodeReq_FieldNumber) {
  PBValidCodeReq_FieldNumber_MobileCode = 1,
  PBValidCodeReq_FieldNumber_Mobile = 2,
  PBValidCodeReq_FieldNumber_ValidCodeType = 3,
};

@interface PBValidCodeReq : GPBMessage

/** 国际电话区号，默认为 86，可选 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobileCode;

/** 手机号 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *mobile;

/** 验证码类型 */
@property(nonatomic, readwrite) uint32_t validCodeType;

@end

#pragma mark - PBUserLoginData

typedef GPB_ENUM(PBUserLoginData_FieldNumber) {
  PBUserLoginData_FieldNumber_UserId = 1,
  PBUserLoginData_FieldNumber_UserName = 2,
  PBUserLoginData_FieldNumber_LastLoginDevice = 3,
  PBUserLoginData_FieldNumber_LastLoginClientIp = 4,
  PBUserLoginData_FieldNumber_LastLoginLocation = 5,
  PBUserLoginData_FieldNumber_LastLoginDate = 6,
};

/**
 * 用户的登录信息
 **/
@interface PBUserLoginData : GPBMessage

/** 用户 ID，不同业务系统的用户 ID 可能有不同类型，此处统一转成 string */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userId;

/** 用户昵称 */
@property(nonatomic, readwrite, copy, null_resettable) NSString *userName;

/** 最近登录的设备信息 */
@property(nonatomic, readwrite, strong, null_resettable) PBDevice *lastLoginDevice;
/** Test to see if @c lastLoginDevice has been set. */
@property(nonatomic, readwrite) BOOL hasLastLoginDevice;

/** 最近登录的 IP */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastLoginClientIp;

/** 最近登录的地点（通过 IP 获得） */
@property(nonatomic, readwrite, copy, null_resettable) NSString *lastLoginLocation;

/** 最近登录的时间 */
@property(nonatomic, readwrite) uint64_t lastLoginDate;

@end

NS_ASSUME_NONNULL_END

CF_EXTERN_C_END

#pragma clang diagnostic pop

// @@protoc_insertion_point(global_scope)
